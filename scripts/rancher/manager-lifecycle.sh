# Collection of functions to manage Rancher lifecycle

#######################################
# Installs Rancher with a certificate generated by a cluster issuer
# Arguments:
#   Helm repository suffix (latest, stable)
#   Version
#   Number of replicas
#   Hostname
#   Cluster issuer name (managed by cert-manager)
# Examples:
#   install_rancher_externalclusterissuer latest "2.8.2" 1 rancher.random_string.geek letsencrypt-prod
#######################################
install_rancher_externalclusterissuer() {
  local repository=$1
  local version=$2
  local replicas=$3
  local hostname=$4
  local clusterissuer=$5

  echo "Installing Rancher..."
  helm repo add rancher-${repository} https://releases.rancher.com/server-charts/${repository}
  helm repo update
  helm upgrade --install rancher rancher-${repository}/rancher --namespace cattle-system --create-namespace \
    --version ${version} \
    --set replicas=${replicas} \
    --set hostname=${hostname} \
    --set ingress.extraAnnotations.'cert-manager\.io/cluster-issuer'=${clusterissuer} \
    --set ingress.tls.source=secret \
    --set ingress.tls.secretName=rancher-tls
  kubectl wait pods -n cattle-system -l app=rancher --for condition=Ready --timeout=180s
  while ! kubectl get secret rancher-tls --namespace cattle-system; do sleep 1; done
  sleep 10
}

#######################################
# Do the first log in Rancher (will update admin password and set server URL)
# Arguments:
#   Rancher URL (starting with http:// or https://)
#   new password
# Examples:
#   do_rancher_first_login MyNewPassword
#######################################
do_rancher_first_login() {
  local rancherUrl=$1
  local newPassword=$2

  echo "Do first login on Rancher..."
  BOOTSTRAP_PASSWORD=$(kubectl get secret --namespace cattle-system bootstrap-secret -o go-template='{{.data.bootstrapPassword|base64decode}}{{ "\n" }}')
  rancher_login_userpwd 'admin' $BOOTSTRAP_PASSWORD
  rancher_update_userpwd $rancherUrl $LOGIN_TOKEN $BOOTSTRAP_PASSWORD $newPassword
  rancher_update_serverurl $rancherUrl $LOGIN_TOKEN
}
